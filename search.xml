<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>js笔记-DOM对象</title>
      <link href="/dom/"/>
      <url>/dom/</url>
      
        <content type="html"><![CDATA[<p>节点：</p><blockquote><p>文档本身是文档节点<br>所有 HTML 元素是元素节点<br>所有 HTML 属性是属性节点<br>HTML 元素内的文本是文本节点<br>注释是注释节点</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> js笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js笔记-数组和字符串API</title>
      <link href="/api/"/>
      <url>/api/</url>
      
        <content type="html"><![CDATA[<h3 id="常见数组API"><a href="#常见数组API" class="headerlink" title="常见数组API"></a>常见数组API</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">push()         <span class="comment">// 往数组的尾部插入一个或多个元素</span></span><br><span class="line">pop()          <span class="comment">// 从数组的尾部删除一个元素</span></span><br><span class="line">unshift()      <span class="comment">// 往数组的头部插入一个或多个元素</span></span><br><span class="line">shift()        <span class="comment">// 从数组的头部删除一个元素</span></span><br><span class="line">slice()        <span class="comment">// 裁切数组</span></span><br><span class="line">splice()       <span class="comment">// 删除或替换数组某个元素</span></span><br><span class="line">concat()       <span class="comment">// 连接一个或多个数组, 不会修改原数组, 会返回连接出来的新数组</span></span><br><span class="line">join()         <span class="comment">// 以特定的连接符将一个数组连接成字符串, 不会修改原数组</span></span><br><span class="line">reverse()      <span class="comment">// 反转数组</span></span><br></pre></td></tr></table></figure><h3 id="常见字符串API"><a href="#常见字符串API" class="headerlink" title="常见字符串API"></a>常见字符串API</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">charAt()                <span class="comment">// 获取指定下标的字符</span></span><br><span class="line">charCodeAt()            <span class="comment">// 如果不传参数, 把第0个字符转unicode编码</span></span><br><span class="line"><span class="built_in">String</span>.fromCharCode()   <span class="comment">// 静态方法,把unicode编码转成字符</span></span><br><span class="line">substring()             <span class="comment">// 裁切字符串,从开始下标裁切到结束下标,结束下标裁切不到</span></span><br><span class="line">split()                 <span class="comment">// 把字符串切割成数组  </span></span><br><span class="line">repeat()                <span class="comment">// 重复一个字符串n次                            </span></span><br><span class="line">trim()                  <span class="comment">// 去除字符串左右两边的空格, 中间的空格则不做处理</span></span><br><span class="line">toLowerCase()           <span class="comment">// 把字符串转小写</span></span><br><span class="line">toUpperCase()           <span class="comment">// 把字符串转大写</span></span><br><span class="line">replace()               <span class="comment">// 替换  </span></span><br><span class="line">indexOf()               <span class="comment">// 从头部开始检索下标</span></span><br><span class="line">lastIndexOf()           <span class="comment">// 从尾部开始检索下标</span></span><br></pre></td></tr></table></figure><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><h4 id="1-数组API"><a href="#1-数组API" class="headerlink" title="1.数组API"></a>1.数组API</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> newArr = arr.push(<span class="number">4</span>);    <span class="comment">// 修改原数组,返回新数组长度 4,arr = [1, 2, 3, 4]</span></span><br><span class="line"><span class="keyword">var</span> newArr = arr.pop();      <span class="comment">// 修改原数组,返回被删除的元素 4,arr = [1, 2, 3]</span></span><br><span class="line"><span class="keyword">var</span> newArr = arr.unshift(<span class="number">0</span>); <span class="comment">// 修改原数组,返回新数组长度 4,arr = [0, 1, 2, 3]</span></span><br><span class="line"><span class="keyword">var</span> newArr = arr.shift();    <span class="comment">// 修改原数组,返回被删除的元素 0,arr = [1, 2, 3]</span></span><br><span class="line"><span class="keyword">var</span> newArr = arr.slice(<span class="number">0</span>,<span class="number">2</span>); <span class="comment">// 不会修改原数组,返回被裁切出来的数组 [1, 2],arr = [1, 2, 3]</span></span><br><span class="line"><span class="keyword">var</span> newArr = arr.slice(<span class="number">1</span>);   <span class="comment">// 如果只有一个参数, 则作为开始下标 裁切到数组尾部</span></span><br><span class="line"><span class="keyword">var</span> newArr = arr.splice(<span class="number">1</span>,<span class="number">2</span>);<span class="comment">// 会修改原数组,返回切割出来的数组 [2, 3],arr = [1]</span></span><br><span class="line"><span class="keyword">var</span> newArr = arr.splice(<span class="number">1</span>);  <span class="comment">// 如果只有一个参数, 则作为开始裁切的下标, 裁切到数组尾部</span></span><br><span class="line"><span class="keyword">var</span> newArr = arr.splice(<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>); <span class="comment">// 替换,newArr=[1, 2],arr=[1, 0, 0] </span></span><br><span class="line"><span class="keyword">var</span> newArr = arr.concat([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]); <span class="comment">// 不会修改原数组,会返回连接出来的新数组 [1,2,3,4,5,6]</span></span><br><span class="line"><span class="keyword">var</span> newArr = arr.join(<span class="string">&quot;-&quot;</span>);  <span class="comment">// 不会修改原数组, 返回连接过后的新字符串 1-2-3-4-5-6</span></span><br><span class="line"><span class="keyword">var</span> newArr = arr.reverse();  <span class="comment">// 会修改原数组,返回反转过后的数组 [6,5,4,3,2,1]</span></span><br></pre></td></tr></table></figure><h4 id="2-filter-过滤"><a href="#2-filter-过滤" class="headerlink" title="2.filter 过滤"></a>2.filter 过滤</h4><p>创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"><span class="keyword">var</span> newArr = arr.filter(<span class="function"><span class="keyword">function</span> (<span class="params">ele, i, arr</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;数组的每一项 =&gt;&quot;</span>, ele);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;数组的下标 =&gt;&quot;</span>, i);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;数组本身 =&gt;&quot;</span>, arr);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 筛选符合条件的部分</span></span><br><span class="line">    <span class="keyword">if</span> (ele % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// 函数执行的结果为true, 则当前元素就是过滤出来的元素, 会返回成新数组</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;筛选出来的数组 =&gt;&quot;</span>, newArr); <span class="comment">// [2，4，6，8，10];</span></span><br></pre></td></tr></table></figure><h4 id="3-map-迭代"><a href="#3-map-迭代" class="headerlink" title="3.map 迭代"></a>3.map 迭代</h4><p>把数组中的每一项，经过函数的处理以后,返回成新的数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"><span class="keyword">var</span> newArr = arr.map(<span class="function"><span class="keyword">function</span> (<span class="params">e, i, arr</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;数组的每一项 =&gt;&quot;</span>, e);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;数组的下标 =&gt;&quot;</span>, i);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;数组本身 =&gt;&quot;</span>, arr);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 把每一个元素 放大两倍, 然后返回成新的数组</span></span><br><span class="line">    e = e * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> e;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;新数组 =&gt;&quot;</span>, newArr); <span class="comment">//  [3, 5, 7, 9, 11, 13, 15, 17, 19, 21]</span></span><br></pre></td></tr></table></figure><h4 id="4-forEach-遍历"><a href="#4-forEach-遍历" class="headerlink" title="4.forEach 遍历"></a>4.forEach 遍历</h4><p>用于调用数组的每一个元素，并将元素传递给回调函数，不支持 return ,没有返回值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"><span class="keyword">var</span> newArrr = arr.forEach( <span class="function"><span class="keyword">function</span>(<span class="params">ele, i, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;数组的每一项 =&gt;&quot;</span>, ele);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;数组的下标 =&gt;&quot;</span>, i);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;数组本身 =&gt;&quot;</span>, arr);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(newArr); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><h4 id="5-字符串API"><a href="#5-字符串API" class="headerlink" title="5.字符串API"></a>5.字符串API</h4><p>注意：字符串的API, 不会修改原字符串, 都是返回新的字符串 (split方法返回数组)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;hello wolrd&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> newStr = str.charAt(<span class="number">0</span>);     <span class="comment">// 获取下标值 h</span></span><br><span class="line"><span class="keyword">var</span> newStr = str.charCodeAt(<span class="number">0</span>); <span class="comment">// 获取下标值并转换为unicode编码 104 </span></span><br><span class="line"><span class="keyword">var</span> newStr = <span class="built_in">String</span>.fromCharCode(<span class="number">104</span>);  <span class="comment">// 把unicode编码转成字符 h</span></span><br><span class="line"><span class="keyword">var</span> newStr = str.substring(<span class="number">1</span>,<span class="number">4</span>);<span class="comment">// 裁切字符串,从开始下标裁切到结束下标,结束下标裁切不到 ell</span></span><br><span class="line"><span class="keyword">var</span> newStr = str.split(<span class="string">&quot; &quot;</span>);    <span class="comment">// 把字符串切割成数组 [&quot;hello&quot;, &quot;wolrd&quot;]</span></span><br><span class="line"><span class="keyword">var</span> newStr = str.repeat(<span class="number">2</span>);     <span class="comment">// 重复字符串 hello wolrdhello wolrd</span></span><br><span class="line"><span class="keyword">var</span> newStr = str.trim();        <span class="comment">// 去除字符串左右两边的空格 hello wolrd</span></span><br><span class="line"><span class="keyword">var</span> newStr = str.toLowerCase(); <span class="comment">// 把字符串转小写 hello wolrd</span></span><br><span class="line"><span class="keyword">var</span> newStr = str.toUpperCase(); <span class="comment">// 把字符串转大写 HELLO WOLRD</span></span><br><span class="line"><span class="keyword">var</span> newStr = str.replace(<span class="string">&quot;h&quot;</span>,<span class="string">&quot;w&quot;</span>); <span class="comment">// 替换 wello Wolrd</span></span><br><span class="line"><span class="keyword">var</span> newStr = str.indexOf(<span class="string">&quot;h&quot;</span>);     <span class="comment">// 从头部开始检索下标 0</span></span><br><span class="line"><span class="keyword">var</span> newStr = str.lastIndexOf(<span class="string">&quot;l&quot;</span>); <span class="comment">// 从尾部开始检索下标 8</span></span><br></pre></td></tr></table></figure><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><h4 id="1-把手机号码的中间4位替换成"><a href="#1-把手机号码的中间4位替换成" class="headerlink" title="1.把手机号码的中间4位替换成 ****"></a>1.把手机号码的中间4位替换成 ****</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> phone = <span class="string">&quot;13922297693&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> newPhone = phone.replace(phone.slice(<span class="number">3</span>,<span class="number">7</span>),<span class="string">&quot;*&quot;</span>.repeat(<span class="number">4</span>)); <span class="comment">// 139****7693</span></span><br></pre></td></tr></table></figure><h4 id="2-创建一个替换字符串函数replaceString"><a href="#2-创建一个替换字符串函数replaceString" class="headerlink" title="2.创建一个替换字符串函数replaceString"></a>2.创建一个替换字符串函数replaceString</h4><p>函数接收三个参数 oldS旧字符, newS新字符, fullS完整字符串<br>函数返回一个新字符串，要求将完整字符串中所有旧字符替换成新字符</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">replaceString</span>(<span class="params">olds, news, fulls</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 如果完成字符串中还有旧字符串,继续循环</span></span><br><span class="line">    <span class="keyword">while</span>(fulls.indexOf(olds) != -<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="comment">// 旧字符串的下标</span></span><br><span class="line">        <span class="keyword">var</span> i = fulls.indexOf(olds);</span><br><span class="line">        <span class="comment">// 旧字符串的长度</span></span><br><span class="line">        <span class="keyword">var</span> len = olds.length; </span><br><span class="line">        <span class="comment">// 新的字符串</span></span><br><span class="line">        fulls =  fulls.slice(<span class="number">0</span>,i) + news + fulls.slice(i+len);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fulls;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> str = replaceString(<span class="string">&quot;World&quot;</span>, <span class="string">&quot;Web&quot;</span>, <span class="string">&quot;Hello World&quot;</span>); <span class="comment">// Hello Web</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js笔记-时间对象</title>
      <link href="/time/"/>
      <url>/time/</url>
      
        <content type="html"><![CDATA[<h3 id="get方法"><a href="#get方法" class="headerlink" title="get方法"></a>get方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">getFullYear()           <span class="comment">// 获取年份</span></span><br><span class="line">getMonth()              <span class="comment">// 获取月份</span></span><br><span class="line">getDate()               <span class="comment">// 获取日期</span></span><br><span class="line">getDay()                <span class="comment">// 获取星期几</span></span><br><span class="line">getHours()              <span class="comment">// 获取小时</span></span><br><span class="line">getMinutes()            <span class="comment">// 获取分钟</span></span><br><span class="line">getSeconds()            <span class="comment">// 获取秒钟</span></span><br><span class="line">getMilliseconds()       <span class="comment">// 获取毫秒</span></span><br><span class="line">getTime()               <span class="comment">// 获取1970年至今的毫秒数  同 Date.now()</span></span><br></pre></td></tr></table></figure><h3 id="to方法"><a href="#to方法" class="headerlink" title="to方法"></a>to方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">toString()              <span class="comment">// 把日期对象转字符串</span></span><br><span class="line">toLocaleString()        <span class="comment">// 把日期对象转成符合当地习惯的字符串</span></span><br><span class="line">toDateString()          <span class="comment">// 把时间对象的日期部分转字符串</span></span><br><span class="line">toLocaleDateString()    <span class="comment">// 把时间对象的日期部分转成符合当地习惯的字符串</span></span><br><span class="line">toTimeString()          <span class="comment">// 把时间对象的时间部分转字符串</span></span><br><span class="line">toLocaleTimeString()    <span class="comment">// 把时间对象的时间部分转成符合当地习惯的字符串</span></span><br><span class="line">toUTCString()           <span class="comment">// 把日期对象转UTC时间字符串</span></span><br></pre></td></tr></table></figure><h3 id="set方法"><a href="#set方法" class="headerlink" title="set方法"></a>set方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">setFullYear()           <span class="comment">// 设置年份</span></span><br><span class="line">setMonth()              <span class="comment">// 设置月份</span></span><br><span class="line">setDate()               <span class="comment">// 设置日期</span></span><br><span class="line">setHours()              <span class="comment">// 设置小时</span></span><br><span class="line">setMinutes()            <span class="comment">// 设置分数</span></span><br><span class="line">setSeconds()            <span class="comment">// 设置秒数</span></span><br><span class="line">setMilliseconds()       <span class="comment">// 设置毫秒</span></span><br></pre></td></tr></table></figure><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><h4 id="以当前-“2022-1-14-09-58-27-星期五”-为例"><a href="#以当前-“2022-1-14-09-58-27-星期五”-为例" class="headerlink" title="以当前 “2022-1-14 09:58:27 星期五” 为例"></a>以当前 “2022-1-14 09:58:27 星期五” 为例</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实例时间对象</span></span><br><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// get</span></span><br><span class="line"><span class="keyword">var</span> year = date.getFullYear();  <span class="comment">// 2022</span></span><br><span class="line"><span class="keyword">var</span> month = date.getMonth()+<span class="number">1</span>;  <span class="comment">// 默认月份从 0 开始，所以要 +1 ，结果为: 1</span></span><br><span class="line"><span class="keyword">var</span> newDate = date.getDate();  <span class="comment">// 14</span></span><br><span class="line"><span class="keyword">var</span> day = date.getDay();  <span class="comment">// 5</span></span><br><span class="line"><span class="keyword">var</span> hours = date.getHours();  <span class="comment">// 9</span></span><br><span class="line"><span class="keyword">var</span> minutes = date.getMinutes(); <span class="comment">// 58</span></span><br><span class="line"><span class="keyword">var</span> seconds = date.getSeconds(); <span class="comment">// 27</span></span><br><span class="line"><span class="keyword">var</span> milliseconds = date.getMilliseconds(); <span class="comment">// 735</span></span><br><span class="line"><span class="keyword">var</span> time = date.getTime(); <span class="comment">// 1642125892270</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// to</span></span><br><span class="line"><span class="keyword">var</span> toString = date.toString();  <span class="comment">// typeof strTime = &quot;String&quot;</span></span><br><span class="line"><span class="keyword">var</span> toLocaleString = date.toLocaleString();  <span class="comment">// 2022/1/14 上午9:58:27</span></span><br><span class="line"><span class="keyword">var</span> toDateString = date.toDateString();  <span class="comment">// Fri Jan 14 2022</span></span><br><span class="line"><span class="keyword">var</span> toLocaleDateString = date.toLocaleDateString(); <span class="comment">// 2022/1/14</span></span><br><span class="line"><span class="keyword">var</span> toTimeString = date.toTimeString();  <span class="comment">// 09:58:27 GMT+0800 (中国标准时间)</span></span><br><span class="line"><span class="keyword">var</span> toLocaleTimeString = date.toLocaleTimeString(); <span class="comment">// 上午9:58:27</span></span><br><span class="line"><span class="keyword">var</span> toUTCString = date.toUTCString(); <span class="comment">// Fri, 14 Jan 2022 02:45:38 GMT</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// set</span></span><br><span class="line">date.setFullYear(<span class="number">2024</span>);</span><br><span class="line">date.setMonth(<span class="number">1</span>);</span><br><span class="line">date.setDate(<span class="number">19</span>);</span><br><span class="line">date.setHours(<span class="number">08</span>);</span><br><span class="line">date.setMinutes(<span class="number">00</span>);</span><br><span class="line">date.setSeconds(<span class="number">00</span>);</span><br><span class="line">date.setMilliseconds(<span class="number">00</span>);</span><br><span class="line"><span class="built_in">console</span>.log(date);  <span class="comment">// Mon Feb 19 2024 08:00:00 GMT+0800 (中国标准时间)</span></span><br></pre></td></tr></table></figure><h4 id="获取时间对象-把日期展示到页面上"><a href="#获取时间对象-把日期展示到页面上" class="headerlink" title="获取时间对象, 把日期展示到页面上"></a>获取时间对象, 把日期展示到页面上</h4><p>格式为  xxxx年xx月xx日 xx点xx分xx秒<br>如果不足两个数, 需要补0例如：2022-01-14  9:58:27</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getTime</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 定时器 每隔一秒重新获取一次时间</span></span><br><span class="line">    <span class="keyword">var</span> today = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取年月日</span></span><br><span class="line">    <span class="keyword">var</span> year = today.getFullYear();</span><br><span class="line">    <span class="keyword">var</span> month = today.getMonth() + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> date = today.getDate()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取时分秒</span></span><br><span class="line">    <span class="keyword">var</span> h = today.getHours();</span><br><span class="line">    <span class="keyword">var</span> min = today.getMinutes();</span><br><span class="line">    <span class="keyword">var</span> s = today.getSeconds()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用三目运算 如果不足两个数, 需要补0</span></span><br><span class="line">    month = month &lt; <span class="number">10</span> ? <span class="string">&quot;0&quot;</span> + month : month;</span><br><span class="line">    date = date &lt; <span class="number">10</span> ? <span class="string">&quot;0&quot;</span> + date : date;</span><br><span class="line">    min = min &lt; <span class="number">10</span> ? <span class="string">&quot;0&quot;</span> + min : min;</span><br><span class="line">    s = s &lt; <span class="number">10</span> ? <span class="string">&quot;0&quot;</span> + s : s;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 拼接得到</span></span><br><span class="line">    <span class="keyword">var</span> str = year + <span class="string">&quot;-&quot;</span> + month + <span class="string">&quot;-&quot;</span> + date + <span class="string">&quot; &quot;</span> + h + <span class="string">&quot;:&quot;</span> + min + <span class="string">&quot;:&quot;</span> + s </span><br><span class="line">    <span class="comment">// 把数据展示到页面h1标签</span></span><br><span class="line">    box.innerHTML = str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 时间动态展示, 定时器</span></span><br><span class="line"><span class="built_in">setInterval</span>( getTime , <span class="number">1000</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>上传项目至GitHub</title>
      <link href="/github/"/>
      <url>/github/</url>
      
        <content type="html"><![CDATA[<h3 id="git常用指令"><a href="#git常用指令" class="headerlink" title="git常用指令"></a>git常用指令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">git --version                                  # 查看版本</span><br><span class="line">git init                                       # 初始化仓库</span><br><span class="line">git config --global user.name  &quot;name&quot;          # 配置名称</span><br><span class="line">git config --global user.email &quot;@qq.com&quot;       # 配置邮箱    </span><br><span class="line">git add ./                                     # 添加文件，./代表当前目录</span><br><span class="line">git status                                     # 检查代码状态    </span><br><span class="line">git commit -m &quot;name&quot;                           # 添加内容</span><br><span class="line">git log --oneline                              # 查看记录</span><br><span class="line">git reset --hard Head~0(1)                     # 修改版本     </span><br><span class="line">git reset ---hard &quot;version&quot;                    # 回退指定版本号</span><br><span class="line">git reflog                                     # 查看历史操作</span><br><span class="line">git branch &quot;name&quot;                              # 创建分支        </span><br><span class="line">git branch                                     # 查看分支        </span><br><span class="line">git checkout dev                               # 切换分支，[-b] 创建并切换</span><br><span class="line">git branch -d/-D &quot;name&quot;                        # 删除分支        </span><br><span class="line">git merge &quot;name&quot;                               # 合并分支</span><br><span class="line">git clone http:...                             # 克隆代码</span><br></pre></td></tr></table></figure><h3 id="上传项目"><a href="#上传项目" class="headerlink" title="上传项目"></a>上传项目</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name  &quot;xie392&quot;  </span><br><span class="line">git config --global user.email &quot;2636.@qq.com&quot;</span><br></pre></td></tr></table></figure><p>2.初始化仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init </span><br></pre></td></tr></table></figure><p>3.推送内容到仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add ./</span><br></pre></td></tr></table></figure><p>4.添加内容名称（必须）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;name&quot;</span><br></pre></td></tr></table></figure><p>5.连接远程仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https:xie392...</span><br></pre></td></tr></table></figure><p>6.上传至远程仓库(第一次推送会让你输入账号密码)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>完成以上步骤基本已经完成，下面可以选择做或不做</p><h3 id="配置密钥-ssh-key"><a href="#配置密钥-ssh-key" class="headerlink" title="配置密钥 ssh key"></a>配置密钥 ssh key</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;2636.qq.com&quot;</span><br></pre></td></tr></table></figure><p>生成的密钥在”C:\Users\Administrator.ssh”目录下,把目录下的”id_rsa.pub”文件打开并复制里面的内容<br>来到github仓库，点击 Settings(设置)-Deploy keys(部署密钥)-Add Deploy keys(添加部署密钥)</p><h3 id="常见报错"><a href="#常见报错" class="headerlink" title="常见报错"></a>常见报错</h3><h4 id="error-remote-origin-already-exists"><a href="#error-remote-origin-already-exists" class="headerlink" title="error: remote origin already exists."></a>error: remote origin already exists.</h4><p>错误原因：远程来源已经存在<br>解决方法：<br>删除关联的origin的远程库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure><p>重新关联origin的远程库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https:xie392...</span><br></pre></td></tr></table></figure><h4 id="fatal-Could-not-read-from-remote-repository"><a href="#fatal-Could-not-read-from-remote-repository" class="headerlink" title="fatal: Could not read from remote repository."></a>fatal: Could not read from remote repository.</h4><p>错误原因：客户端与服务端未生成 ssh key 或客户端与服务端的 ssh key 不匹配<br>解决方法：重新生成新的 ssh key</p>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
